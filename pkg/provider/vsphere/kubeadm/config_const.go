/*
simple-kubernetes-test-environment

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package kubeadm

// See docs for these APIs at:
// https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm#pkg-subdirectories
// EG:
// https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta1

// ConfigTemplateAlphaV2 is the kubadm config template for v1alpha2
const ConfigTemplateAlphaV2 = `# config generated by sk8
apiVersion: kubeadm.k8s.io/v1alpha2
kind: MasterConfiguration
metadata:
  name: config

clusterName:       "{{.ClusterName}}"
kubernetesVersion: {{.KubernetesVersion}}

api:
  advertiseAddress:     "{{.APIAdvertiseAddress}}"
  controlPlaneEndpoint: "{{.ControlPlaneEndpoint}}"
  bindPort:             {{.APIBindPort}}

apiServerCertSANs:
{{- range .APIServerCertSANs}}
- "{{.}}"
{{- end}}

networking:
  dnsDomain:     {{.DNSDomain}}
  podSubnet:     {{.PodSubnet}}
  serviceSubnet: {{.ServiceSubnet}}

apiServerExtraArgs:
{{- if .CloudProvider}}
  cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
  cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}

controllerManagerExtraArgs:
{{- if .CloudProvider}}
  cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
  cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}

nodeRegistration:
  kubeletExtraArgs:
{{- if .CloudProvider}}
    cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
    cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}

---

apiVersion: kubeadm.k8s.io/v1alpha2
kind: NodeConfiguration
metadata:
  name: config

clusterName: "{{.ClusterName}}"

nodeRegistration:
  kubeletExtraArgs:
{{- if .CloudProvider}}
    cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
    cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}
`

// ConfigTemplateAlphaV3 is the kubadm config template for API version v1alpha3
const ConfigTemplateAlphaV3 = `# config generated by sk8
apiVersion: kubeadm.k8s.io/v1alpha3
kind: ClusterConfiguration
metadata:
  name: config

clusterName:       "{{.ClusterName}}"
kubernetesVersion: {{.KubernetesVersion}}

controlPlaneEndpoint: "{{.ControlPlaneEndpoint}}"

networking:
  dnsDomain:     {{.DNSDomain}}
  podSubnet:     {{.PodSubnet}}
  serviceSubnet: {{.ServiceSubnet}}

apiServerCertSANs:
{{- range .APIServerCertSANs}}
- "{{.}}"
{{- end}}

apiServerExtraArgs:
{{- if .CloudProvider}}
  cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
  cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}

controllerManagerExtraArgs:
{{- if .CloudProvider}}
  cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
  cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}

---

apiVersion: kubeadm.k8s.io/v1alpha3
kind: InitConfiguration
metadata:
  name: config

apiEndpoint:
  advertiseAddress: "{{.APIAdvertiseAddress}}"
  bindPort:         {{.APIBindPort}}

nodeRegistration:
  kubeletExtraArgs:
{{- if .CloudProvider}}
    cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
    cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}

---

apiVersion: kubeadm.k8s.io/v1alpha3
kind: JoinConfiguration
metadata:
  name: config

clusterName: "{{.ClusterName}}"

nodeRegistration:
  kubeletExtraArgs:
{{- if .CloudProvider}}
    cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
    cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}

---

apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
metadata:
  name: config

---

apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
metadata:
  name: config
`

// ConfigTemplateBetaV1 is the kubadm config template for API version v1beta1
const ConfigTemplateBetaV1 = `# config generated by sk8
apiVersion: kubeadm.k8s.io/v1beta1
kind: ClusterConfiguration
metadata:
  name: config

clusterName:       "{{.ClusterName}}"
kubernetesVersion: {{.KubernetesVersion}}

controlPlaneEndpoint: "{{.ControlPlaneEndpoint}}"

networking:
  dnsDomain:     {{.DNSDomain}}
  podSubnet:     {{.PodSubnet}}
  serviceSubnet: {{.ServiceSubnet}}

apiServer:
  certSANs:
{{- range .APIServerCertSANs}}
  - "{{.}}"
{{- end}}
  extraArgs:
{{- if .CloudProvider}}
    cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
    cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}

controllerManager:
  extraArgs:
{{- if .CloudProvider}}
    cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
    cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}

---

apiVersion: kubeadm.k8s.io/v1beta1
kind: InitConfiguration
metadata:
  name: config

localAPIEndpoint:
  advertiseAddress: "{{.APIAdvertiseAddress}}"
  bindPort:         {{.APIBindPort}}

nodeRegistration:
  kubeletExtraArgs:
{{- if .CloudProvider}}
    cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
    cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}

---

apiVersion: kubeadm.k8s.io/v1beta1
kind: JoinConfiguration
metadata:
  name: config

nodeRegistration:
  kubeletExtraArgs:
{{- if .CloudProvider}}
    cloud-provider: {{.CloudProvider}}
{{- if .CloudConfig}}
    cloud-config:   "{{.CloudConfig}}"
{{- end}}
{{- end}}

---

apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
metadata:
  name: config

---

apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
metadata:
  name: config
`
